language: android

env:
  global:
    - ANDROID_TARGET=android-22
    - ANDROID_ABI=armeabi-v7a

jobs:
  include:
    - dist: trusty
      jdk: oraclejdk8

      script:
        # Call tests here
        - echo Hello, world!

        # Generate javadoc, which we will push to gh-pages in the deploy stage
        - javadoc -d build/docs/javadoc $(find app/src -name *.java)

      # Push generated javadoc to gh-pages if we are in the master branch
      deploy:
        provider: script
        script: bash .utility/initiate-publish.sh
        skip_cleanup: true
        github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
        keep_history: true
        on:
          branch: master

    - jdk: oraclejdk8
      android:
        components:
          # Uncomment the lines below if you want to
          # use the latest revision of Android SDK Tools
          - tools
          - platform-tools

          # The BuildTools version used by your project
          - build-tools-23.0.3

          # The SDK version used to compile your project
          # TODO: why is this here explicitly in addition to $ANDROID_TARGET below
          - android-23
          
          # Additional components
          - extra-google-google_play_services
          - extra-google-m2repository
          - extra-android-m2repository
          
          # The SDK version used to compile your project
          - $ANDROID_TARGET

          # Specify at least one system image,
          # if you need to run emulator(s) during your tests.
          # The line should look like this after interpolation:
          # - sys-img-armeabi-v7a-android-22
          - sys-img-${ANDROID_ABI}-${ANDROID_TARGET}

      licenses:
          - 'android-sdk-license-.+'

      before_install:
        # Decrypt the test google-services.json
        - openssl aes-256-cbc -K $encrypted_1a01409361c6_key -iv $encrypted_1a01409361c6_iv -in app/google-services.json.enc -out app/google-services.json -d

        # Accept sdk licenses
        - yes | sdkmanager "platforms;android-29"

        # Get gradle
        - chmod +x gradlew
        - wget http://services.gradle.org/distributions/gradle-5.3-bin.zip
        - unzip -qq gradle-5.3-bin.zip
        - export GRADLE_HOME=$PWD/gradle-5.3
        - export PATH=$GRADLE_HOME/bin:$PATH
        
        # Build the project
        - gradle -v
        
        # Start the emulator
        - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
        - emulator -avd test -no-skin -no-audio -no-window &
        - android-wait-for-emulator
        - adb shell input keyevent 82 &
        
        # The app will now automatically be installed and tested via
        # the command `gradle connectedCheck`
